SLURMD_NODENAME = hpc-54-23
Start time = Thu Mar 20 03:16:07 PM PDT 2025
OMP_NUM_THREADS = 32
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 327680
TMPDIR = /central/scratch/yangjunjie//run-uks-kpt-nio-afm-4-4-4-fftisdf-jy-32-200-k0-60.0-c0-25.0/48115196/
PYSCF_TMPDIR = /central/scratch/yangjunjie//run-uks-kpt-nio-afm-4-4-4-fftisdf-jy-32-200-k0-60.0-c0-25.0/48115196/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.8.0
1.13.1
2.0.2
fft_engine = NUMPY+BLAS
name = nio-afm
ke_cutoff =  2.00e+02
exxdiv = None
df = fftisdf-jy
chk_path = ../../../gdf-32/tmp/scf.h5
mesh = 4,4,4
c0 =  2.50e+01
k0 =  6.00e+01

Discarded 7 diffused primitive functions, 0 contracted functions
ke_cutoff = 200.0
g0 = [[ 0.          0.          0.        ]
 [ 0.          0.          0.26637826]
 [ 0.          0.          0.53275653]
 ...
 [-0.30758722 -0.21749691 -1.06551305]
 [-0.30758722 -0.21749691 -0.79913479]
 [-0.30758722 -0.21749691 -0.53275652]], m0 = [21 21 21]
Pivoted Cholesky rank = 787, estimated error = 0.00e+00
Parent grid size = 9261, selected grid size = 975
    CPU time for interpolating functions     21.00 sec, wall time      2.27 sec


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [37 37 37] (50653 PWs)
len(kpts) = 64

WARN: ke_cutoff/mesh (200 / [37 37 37]) is not enough for FFTDF to get integral accuracy 1e-08.
Coulomb integral error is ~ 29 Eh.
Recommended ke_cutoff/mesh are 1172.14 / [89 89 89].

kmesh = [4 4 4]
kpts = 
[[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.62121641e-01 -1.14637399e-01  2.80803037e-01]
 [-3.24243283e-01 -2.29274798e-01  5.61606073e-01]
 [-4.86364924e-01 -3.43912196e-01  8.42409110e-01]
 [ 1.34152098e-09  3.43912129e-01  0.00000000e+00]
 [-1.62121640e-01  2.29274730e-01  2.80803037e-01]
 [-3.24243281e-01  1.14637331e-01  5.61606073e-01]
 [-4.86364922e-01 -6.72557783e-08  8.42409110e-01]
 [ 2.68304197e-09  6.87824258e-01  0.00000000e+00]
 [-1.62121639e-01  5.73186859e-01  2.80803037e-01]
 [-3.24243280e-01  4.58549461e-01  5.61606073e-01]
 [-4.86364921e-01  3.43912062e-01  8.42409110e-01]
 [ 4.02456295e-09  1.03173639e+00  0.00000000e+00]
 [-1.62121637e-01  9.17098988e-01  2.80803037e-01]
 [-3.24243278e-01  8.02461590e-01  5.61606073e-01]
 [-4.86364920e-01  6.87824191e-01  8.42409110e-01]
 [ 3.24243282e-01 -1.14637331e-01  0.00000000e+00]
 [ 1.62121641e-01 -2.29274729e-01  2.80803037e-01]
 [-2.46173915e-10 -3.43912128e-01  5.61606073e-01]
 [-1.62121642e-01 -4.58549527e-01  8.42409110e-01]
 [ 3.24243284e-01  2.29274798e-01  0.00000000e+00]
 [ 1.62121642e-01  1.14637400e-01  2.80803037e-01]
 [ 1.09534709e-09  7.74527886e-10  5.61606073e-01]
 [-1.62121640e-01 -1.14637398e-01  8.42409110e-01]
 [ 3.24243285e-01  5.73186927e-01  0.00000000e+00]
 [ 1.62121644e-01  4.58549529e-01  2.80803037e-01]
 [ 2.43686804e-09  3.43912130e-01  5.61606073e-01]
 [-1.62121639e-01  2.29274731e-01  8.42409110e-01]
 [ 3.24243286e-01  9.17099056e-01  0.00000000e+00]
 [ 1.62121645e-01  8.02461658e-01  2.80803037e-01]
 [ 3.77838905e-09  6.87824259e-01  5.61606073e-01]
 [-1.62121637e-01  5.73186860e-01  8.42409110e-01]
 [ 6.48486565e-01 -2.29274661e-01  0.00000000e+00]
 [ 4.86364923e-01 -3.43912060e-01  2.80803037e-01]
 [ 3.24243282e-01 -4.58549459e-01  5.61606073e-01]
 [ 1.62121641e-01 -5.73186858e-01  8.42409110e-01]
 [ 6.48486566e-01  1.14637468e-01  0.00000000e+00]
 [ 4.86364925e-01  6.88048341e-08  2.80803037e-01]
 [ 3.24243283e-01 -1.14637330e-01  5.61606073e-01]
 [ 1.62121642e-01 -2.29274729e-01  8.42409110e-01]
 [ 6.48486567e-01  4.58549597e-01  0.00000000e+00]
 [ 4.86364926e-01  3.43912198e-01  2.80803037e-01]
 [ 3.24243285e-01  2.29274799e-01  5.61606073e-01]
 [ 1.62121643e-01  1.14637400e-01  8.42409110e-01]
 [ 6.48486569e-01  8.02461726e-01  0.00000000e+00]
 [ 4.86364927e-01  6.87824327e-01  2.80803037e-01]
 [ 3.24243286e-01  5.73186928e-01  5.61606073e-01]
 [ 1.62121645e-01  4.58549529e-01  8.42409110e-01]
 [ 9.72729847e-01 -3.43911992e-01  0.00000000e+00]
 [ 8.10608206e-01 -4.58549391e-01  2.80803037e-01]
 [ 6.48486564e-01 -5.73186790e-01  5.61606073e-01]
 [ 4.86364923e-01 -6.87824188e-01  8.42409110e-01]
 [ 9.72729848e-01  1.36835140e-07  0.00000000e+00]
 [ 8.10608207e-01 -1.14637262e-01  2.80803037e-01]
 [ 6.48486566e-01 -2.29274661e-01  5.61606073e-01]
 [ 4.86364924e-01 -3.43912059e-01  8.42409110e-01]
 [ 9.72729849e-01  3.43912266e-01  0.00000000e+00]
 [ 8.10608208e-01  2.29274867e-01  2.80803037e-01]
 [ 6.48486567e-01  1.14637468e-01  5.61606073e-01]
 [ 4.86364926e-01  6.95793620e-08  8.42409110e-01]
 [ 9.72729851e-01  6.87824395e-01  0.00000000e+00]
 [ 8.10608210e-01  5.73186996e-01  2.80803037e-01]
 [ 6.48486568e-01  4.58549597e-01  5.61606073e-01]
 [ 4.86364927e-01  3.43912199e-01  8.42409110e-01]]
nip = 975, nao = 39, cisdf =  25.00
    CPU time for get interpolating vectors      1.08 sec
blksize = 50653, ngrid = 50653
Use in-core for eta_kpt, memory used for eta_kpt = 5.06e+01 GB
    CPU time for aoR_loop: [      0,   50653]    819.79 sec, wall time    150.71 sec
eta_kpt.shape = (64, 50653, 975)
Memory used for eta_kpt = 5.06e+01 GB
Memory required for each k-point = 7.90e-01 GB
Max memory available = 3.27e+05 GB
Finished solving Coulomb kernel for q =   1 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     57.17 sec, wall time      3.32 sec
Finished solving Coulomb kernel for q =   2 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     54.25 sec, wall time      2.90 sec
Finished solving Coulomb kernel for q =   3 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     53.21 sec, wall time      2.53 sec
Finished solving Coulomb kernel for q =   4 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     53.66 sec, wall time      2.56 sec
Finished solving Coulomb kernel for q =   5 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     53.29 sec, wall time      2.53 sec
Finished solving Coulomb kernel for q =   6 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     52.95 sec, wall time      2.51 sec
Finished solving Coulomb kernel for q =   7 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     53.18 sec, wall time      2.53 sec
Finished solving Coulomb kernel for q =   8 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     56.96 sec, wall time      2.65 sec
Finished solving Coulomb kernel for q =   9 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     53.25 sec, wall time      2.53 sec
Finished solving Coulomb kernel for q =  10 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     52.98 sec, wall time      2.51 sec
Finished solving Coulomb kernel for q =  11 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     53.06 sec, wall time      2.52 sec
Finished solving Coulomb kernel for q =  12 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     53.16 sec, wall time      2.52 sec
Finished solving Coulomb kernel for q =  13 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     53.14 sec, wall time      2.52 sec
Finished solving Coulomb kernel for q =  14 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     53.01 sec, wall time      2.51 sec
Finished solving Coulomb kernel for q =  15 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     53.18 sec, wall time      2.53 sec
Finished solving Coulomb kernel for q =  16 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     53.47 sec, wall time      2.53 sec
Finished solving Coulomb kernel for q =  17 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     53.25 sec, wall time      2.54 sec
Finished solving Coulomb kernel for q =  18 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     53.13 sec, wall time      2.51 sec
Finished solving Coulomb kernel for q =  19 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     53.13 sec, wall time      2.52 sec
Finished solving Coulomb kernel for q =  20 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     53.10 sec, wall time      2.53 sec
Finished solving Coulomb kernel for q =  21 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     52.96 sec, wall time      2.51 sec
Finished solving Coulomb kernel for q =  22 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     53.16 sec, wall time      2.51 sec
Finished solving Coulomb kernel for q =  23 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     53.17 sec, wall time      2.58 sec
Finished solving Coulomb kernel for q =  24 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     53.00 sec, wall time      2.55 sec
Finished solving Coulomb kernel for q =  25 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     52.87 sec, wall time      2.51 sec
Finished solving Coulomb kernel for q =  26 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     52.99 sec, wall time      2.51 sec
Finished solving Coulomb kernel for q =  27 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     53.04 sec, wall time      2.52 sec
Finished solving Coulomb kernel for q =  28 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     53.30 sec, wall time      2.51 sec
Finished solving Coulomb kernel for q =  29 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     53.15 sec, wall time      2.52 sec
Finished solving Coulomb kernel for q =  30 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     52.99 sec, wall time      2.51 sec
Finished solving Coulomb kernel for q =  31 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     53.23 sec, wall time      2.52 sec
Finished solving Coulomb kernel for q =  32 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     53.41 sec, wall time      2.63 sec
Finished solving Coulomb kernel for q =  33 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     52.99 sec, wall time      2.51 sec
Finished solving Coulomb kernel for q =  34 /  64, rank = 610 / 975
    CPU time for solving Coulomb kernel     53.07 sec, wall time      2.51 sec
