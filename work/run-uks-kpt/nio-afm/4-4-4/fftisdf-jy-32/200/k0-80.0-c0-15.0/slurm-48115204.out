SLURMD_NODENAME = hpc-53-08
Start time = Thu Mar 20 03:16:44 PM PDT 2025
OMP_NUM_THREADS = 32
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 327680
TMPDIR = /central/scratch/yangjunjie//run-uks-kpt-nio-afm-4-4-4-fftisdf-jy-32-200-k0-80.0-c0-15.0/48115204/
PYSCF_TMPDIR = /central/scratch/yangjunjie//run-uks-kpt-nio-afm-4-4-4-fftisdf-jy-32-200-k0-80.0-c0-15.0/48115204/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.8.0
1.13.1
2.0.2
fft_engine = NUMPY+BLAS
name = nio-afm
ke_cutoff =  2.00e+02
exxdiv = None
df = fftisdf-jy
chk_path = ../../../gdf-32/tmp/scf.h5
mesh = 4,4,4
c0 =  1.50e+01
k0 =  8.00e+01

Discarded 7 diffused primitive functions, 0 contracted functions
ke_cutoff = 200.0
g0 = [[ 0.          0.          0.        ]
 [ 0.          0.          0.22375774]
 [ 0.          0.          0.44751548]
 ...
 [-0.25837327 -0.1826974  -0.89503096]
 [-0.25837327 -0.1826974  -0.67127322]
 [-0.25837327 -0.1826974  -0.44751548]], m0 = [25 25 25]
Pivoted Cholesky rank = 796, estimated error = 3.16e-04
Parent grid size = 15625, selected grid size = 585
    CPU time for interpolating functions     43.45 sec, wall time      6.24 sec


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [37 37 37] (50653 PWs)
len(kpts) = 64

WARN: ke_cutoff/mesh (200 / [37 37 37]) is not enough for FFTDF to get integral accuracy 1e-08.
Coulomb integral error is ~ 29 Eh.
Recommended ke_cutoff/mesh are 1172.14 / [89 89 89].

kmesh = [4 4 4]
kpts = 
[[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.62121641e-01 -1.14637399e-01  2.80803037e-01]
 [-3.24243283e-01 -2.29274798e-01  5.61606073e-01]
 [-4.86364924e-01 -3.43912196e-01  8.42409110e-01]
 [ 1.34152098e-09  3.43912129e-01  0.00000000e+00]
 [-1.62121640e-01  2.29274730e-01  2.80803037e-01]
 [-3.24243281e-01  1.14637331e-01  5.61606073e-01]
 [-4.86364922e-01 -6.72557783e-08  8.42409110e-01]
 [ 2.68304197e-09  6.87824258e-01  0.00000000e+00]
 [-1.62121639e-01  5.73186859e-01  2.80803037e-01]
 [-3.24243280e-01  4.58549461e-01  5.61606073e-01]
 [-4.86364921e-01  3.43912062e-01  8.42409110e-01]
 [ 4.02456295e-09  1.03173639e+00  0.00000000e+00]
 [-1.62121637e-01  9.17098988e-01  2.80803037e-01]
 [-3.24243278e-01  8.02461590e-01  5.61606073e-01]
 [-4.86364920e-01  6.87824191e-01  8.42409110e-01]
 [ 3.24243282e-01 -1.14637331e-01  0.00000000e+00]
 [ 1.62121641e-01 -2.29274729e-01  2.80803037e-01]
 [-2.46173915e-10 -3.43912128e-01  5.61606073e-01]
 [-1.62121642e-01 -4.58549527e-01  8.42409110e-01]
 [ 3.24243284e-01  2.29274798e-01  0.00000000e+00]
 [ 1.62121642e-01  1.14637400e-01  2.80803037e-01]
 [ 1.09534709e-09  7.74527886e-10  5.61606073e-01]
 [-1.62121640e-01 -1.14637398e-01  8.42409110e-01]
 [ 3.24243285e-01  5.73186927e-01  0.00000000e+00]
 [ 1.62121644e-01  4.58549529e-01  2.80803037e-01]
 [ 2.43686804e-09  3.43912130e-01  5.61606073e-01]
 [-1.62121639e-01  2.29274731e-01  8.42409110e-01]
 [ 3.24243286e-01  9.17099056e-01  0.00000000e+00]
 [ 1.62121645e-01  8.02461658e-01  2.80803037e-01]
 [ 3.77838905e-09  6.87824259e-01  5.61606073e-01]
 [-1.62121637e-01  5.73186860e-01  8.42409110e-01]
 [ 6.48486565e-01 -2.29274661e-01  0.00000000e+00]
 [ 4.86364923e-01 -3.43912060e-01  2.80803037e-01]
 [ 3.24243282e-01 -4.58549459e-01  5.61606073e-01]
 [ 1.62121641e-01 -5.73186858e-01  8.42409110e-01]
 [ 6.48486566e-01  1.14637468e-01  0.00000000e+00]
 [ 4.86364925e-01  6.88048341e-08  2.80803037e-01]
 [ 3.24243283e-01 -1.14637330e-01  5.61606073e-01]
 [ 1.62121642e-01 -2.29274729e-01  8.42409110e-01]
 [ 6.48486567e-01  4.58549597e-01  0.00000000e+00]
 [ 4.86364926e-01  3.43912198e-01  2.80803037e-01]
 [ 3.24243285e-01  2.29274799e-01  5.61606073e-01]
 [ 1.62121643e-01  1.14637400e-01  8.42409110e-01]
 [ 6.48486569e-01  8.02461726e-01  0.00000000e+00]
 [ 4.86364927e-01  6.87824327e-01  2.80803037e-01]
 [ 3.24243286e-01  5.73186928e-01  5.61606073e-01]
 [ 1.62121645e-01  4.58549529e-01  8.42409110e-01]
 [ 9.72729847e-01 -3.43911992e-01  0.00000000e+00]
 [ 8.10608206e-01 -4.58549391e-01  2.80803037e-01]
 [ 6.48486564e-01 -5.73186790e-01  5.61606073e-01]
 [ 4.86364923e-01 -6.87824188e-01  8.42409110e-01]
 [ 9.72729848e-01  1.36835140e-07  0.00000000e+00]
 [ 8.10608207e-01 -1.14637262e-01  2.80803037e-01]
 [ 6.48486566e-01 -2.29274661e-01  5.61606073e-01]
 [ 4.86364924e-01 -3.43912059e-01  8.42409110e-01]
 [ 9.72729849e-01  3.43912266e-01  0.00000000e+00]
 [ 8.10608208e-01  2.29274867e-01  2.80803037e-01]
 [ 6.48486567e-01  1.14637468e-01  5.61606073e-01]
 [ 4.86364926e-01  6.95793620e-08  8.42409110e-01]
 [ 9.72729851e-01  6.87824395e-01  0.00000000e+00]
 [ 8.10608210e-01  5.73186996e-01  2.80803037e-01]
 [ 6.48486568e-01  4.58549597e-01  5.61606073e-01]
 [ 4.86364927e-01  3.43912199e-01  8.42409110e-01]]
nip = 585, nao = 39, cisdf =  15.00
    CPU time for get interpolating vectors      0.90 sec
blksize = 50653, ngrid = 50653
Use in-core for eta_kpt, memory used for eta_kpt = 3.03e+01 GB
    CPU time for aoR_loop: [      0,   50653]    471.84 sec, wall time     74.84 sec
eta_kpt.shape = (64, 50653, 585)
Memory used for eta_kpt = 3.03e+01 GB
Memory required for each k-point = 4.74e-01 GB
Max memory available = 3.27e+05 GB
Finished solving Coulomb kernel for q =   1 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     37.94 sec, wall time      1.93 sec
Finished solving Coulomb kernel for q =   2 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     37.40 sec, wall time      1.91 sec
Finished solving Coulomb kernel for q =   3 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     37.77 sec, wall time      1.95 sec
Finished solving Coulomb kernel for q =   4 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     37.85 sec, wall time      1.93 sec
Finished solving Coulomb kernel for q =   5 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     38.65 sec, wall time      1.95 sec
Finished solving Coulomb kernel for q =   6 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     55.22 sec, wall time      2.54 sec
Finished solving Coulomb kernel for q =   7 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     60.35 sec, wall time      2.73 sec
Finished solving Coulomb kernel for q =   8 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     37.33 sec, wall time      1.91 sec
Finished solving Coulomb kernel for q =   9 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     37.23 sec, wall time      1.93 sec
Finished solving Coulomb kernel for q =  10 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     38.13 sec, wall time      1.94 sec
Finished solving Coulomb kernel for q =  11 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     37.72 sec, wall time      1.93 sec
Finished solving Coulomb kernel for q =  12 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     39.77 sec, wall time      2.05 sec
Finished solving Coulomb kernel for q =  13 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     37.13 sec, wall time      1.90 sec
Finished solving Coulomb kernel for q =  14 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     37.18 sec, wall time      1.90 sec
Finished solving Coulomb kernel for q =  15 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     39.72 sec, wall time      2.10 sec
Finished solving Coulomb kernel for q =  16 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     42.23 sec, wall time      2.15 sec
Finished solving Coulomb kernel for q =  17 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     37.82 sec, wall time      1.93 sec
Finished solving Coulomb kernel for q =  18 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     37.10 sec, wall time      1.91 sec
Finished solving Coulomb kernel for q =  19 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     38.03 sec, wall time      1.94 sec
Finished solving Coulomb kernel for q =  20 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     38.39 sec, wall time      2.03 sec
Finished solving Coulomb kernel for q =  21 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     43.96 sec, wall time      2.29 sec
Finished solving Coulomb kernel for q =  22 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     39.94 sec, wall time      2.18 sec
Finished solving Coulomb kernel for q =  23 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     41.57 sec, wall time      2.50 sec
Finished solving Coulomb kernel for q =  24 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     38.50 sec, wall time      2.13 sec
Finished solving Coulomb kernel for q =  25 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     37.78 sec, wall time      1.97 sec
Finished solving Coulomb kernel for q =  26 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     40.62 sec, wall time      2.06 sec
Finished solving Coulomb kernel for q =  27 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     40.27 sec, wall time      2.20 sec
Finished solving Coulomb kernel for q =  28 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     37.57 sec, wall time      2.23 sec
Finished solving Coulomb kernel for q =  29 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     44.31 sec, wall time      2.23 sec
Finished solving Coulomb kernel for q =  30 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     38.26 sec, wall time      2.00 sec
Finished solving Coulomb kernel for q =  31 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     39.80 sec, wall time      2.03 sec
Finished solving Coulomb kernel for q =  32 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     42.02 sec, wall time      2.12 sec
Finished solving Coulomb kernel for q =  33 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     37.36 sec, wall time      2.01 sec
Finished solving Coulomb kernel for q =  34 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     42.83 sec, wall time      2.16 sec
Finished solving Coulomb kernel for q =  35 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     47.92 sec, wall time      2.36 sec
Finished solving Coulomb kernel for q =  36 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     37.69 sec, wall time      1.91 sec
Finished solving Coulomb kernel for q =  37 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     37.41 sec, wall time      1.98 sec
Finished solving Coulomb kernel for q =  38 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     42.53 sec, wall time      2.12 sec
Finished solving Coulomb kernel for q =  39 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     38.00 sec, wall time      1.94 sec
Finished solving Coulomb kernel for q =  40 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     38.23 sec, wall time      1.95 sec
Finished solving Coulomb kernel for q =  41 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     37.61 sec, wall time      1.94 sec
Finished solving Coulomb kernel for q =  42 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     38.02 sec, wall time      1.97 sec
Finished solving Coulomb kernel for q =  43 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     38.09 sec, wall time      1.94 sec
Finished solving Coulomb kernel for q =  44 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     40.19 sec, wall time      2.07 sec
Finished solving Coulomb kernel for q =  45 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     37.82 sec, wall time      1.95 sec
Finished solving Coulomb kernel for q =  46 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     35.20 sec, wall time      1.85 sec
Finished solving Coulomb kernel for q =  47 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     31.76 sec, wall time      1.50 sec
Finished solving Coulomb kernel for q =  48 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     39.16 sec, wall time      1.78 sec
Finished solving Coulomb kernel for q =  49 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     38.34 sec, wall time      1.87 sec
Finished solving Coulomb kernel for q =  50 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     40.90 sec, wall time      1.94 sec
Finished solving Coulomb kernel for q =  51 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     34.96 sec, wall time      1.69 sec
Finished solving Coulomb kernel for q =  52 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     35.16 sec, wall time      1.70 sec
Finished solving Coulomb kernel for q =  53 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     35.89 sec, wall time      1.75 sec
Finished solving Coulomb kernel for q =  54 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     35.86 sec, wall time      1.77 sec
Finished solving Coulomb kernel for q =  55 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     35.32 sec, wall time      1.74 sec
Finished solving Coulomb kernel for q =  56 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     40.35 sec, wall time      2.03 sec
Finished solving Coulomb kernel for q =  57 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     42.05 sec, wall time      2.24 sec
Finished solving Coulomb kernel for q =  58 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     39.98 sec, wall time      2.22 sec
Finished solving Coulomb kernel for q =  59 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     42.69 sec, wall time      2.38 sec
Finished solving Coulomb kernel for q =  60 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     39.06 sec, wall time      2.10 sec
Finished solving Coulomb kernel for q =  61 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     42.04 sec, wall time      2.36 sec
Finished solving Coulomb kernel for q =  62 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     40.31 sec, wall time      2.15 sec
Finished solving Coulomb kernel for q =  63 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     39.72 sec, wall time      2.15 sec
Finished solving Coulomb kernel for q =  64 /  64, rank = 566 / 585
    CPU time for solving Coulomb kernel     38.55 sec, wall time      2.13 sec
Saving FFTISDF results to /central/scratch/yangjunjie/run-uks-kpt-nio-afm-4-4-4-fftisdf-jy-32-200-k0-80.0-c0-15.0/48115204/tmpq_pxcg0a
    CPU time for building ISDF   3061.15 sec, wall time    208.77 sec
Traceback (most recent call last):
  File "/central/home/junjiey/work/benchmark-fftisdf/work/run-uks-kpt/nio-afm/4-4-4/fftisdf-jy-32/200/k0-80.0-c0-15.0/main.py", line 205, in <module>
    e_tot = main(config)
  File "/central/home/junjiey/work/benchmark-fftisdf/work/run-uks-kpt/nio-afm/4-4-4/fftisdf-jy-32/200/k0-80.0-c0-15.0/main.py", line 98, in main
    dm0 = load(chk_path, "dm0")
  File "/home/junjiey/anaconda3/envs/fftisdf/lib/python3.9/site-packages/pyscf/lib/chkfile.py", line 72, in load
    with h5py.File(chkfile, 'r') as fh5:
  File "/home/junjiey/anaconda3/envs/fftisdf/lib/python3.9/site-packages/h5py/_hl/files.py", line 564, in __init__
    fid = make_fid(name, mode, userblock_size, fapl, fcpl, swmr=swmr)
  File "/home/junjiey/anaconda3/envs/fftisdf/lib/python3.9/site-packages/h5py/_hl/files.py", line 238, in make_fid
    fid = h5f.open(name, flags, fapl=fapl)
  File "h5py/_objects.pyx", line 54, in h5py._objects.with_phil.wrapper
  File "h5py/_objects.pyx", line 55, in h5py._objects.with_phil.wrapper
  File "h5py/h5f.pyx", line 102, in h5py.h5f.open
FileNotFoundError: [Errno 2] Unable to synchronously open file (unable to open file: name = '../../../gdf-32/tmp/scf.h5', errno = 2, error message = 'No such file or directory', flags = 0, o_flags = 0)
