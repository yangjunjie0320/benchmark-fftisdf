SLURMD_NODENAME = hpc-34-18
Start time = Fri Mar 21 03:01:31 PM PDT 2025
OMP_NUM_THREADS = 1
MKL_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 10240
TMPDIR = /central/scratch/yangjunjie//run-uks-kpt-nio-afm-4-4-4-fftisdf-jy-1-200-k0-80.0-c0-20.0/48127207/
PYSCF_TMPDIR = /central/scratch/yangjunjie//run-uks-kpt-nio-afm-4-4-4-fftisdf-jy-1-200-k0-80.0-c0-20.0/48127207/

/home/junjiey/anaconda3/envs/fftisdf/bin/python
2.8.0
1.13.1
2.0.2
fft_engine = NUMPY+BLAS
name = nio-afm
ke_cutoff =  2.00e+02
exxdiv = None
df = fftisdf-jy
chk_path = ../../../gdf-32/tmp/scf.h5
mesh = 4,4,4
c0 =  2.00e+01
k0 =  8.00e+01

Discarded 7 diffused primitive functions, 0 contracted functions
ke_cutoff = 200.0
g0 = [[ 0.          0.          0.        ]
 [ 0.          0.          0.22375774]
 [ 0.          0.          0.44751548]
 ...
 [-0.25837327 -0.1826974  -0.89503096]
 [-0.25837327 -0.1826974  -0.67127322]
 [-0.25837327 -0.1826974  -0.44751548]], m0 = [25 25 25]
Pivoted Cholesky rank = 797, estimated error = 1.70e-07
Parent grid size = 15625, selected grid size = 780
    CPU time for interpolating functions     12.65 sec, wall time     12.70 sec


******** <class 'fft_isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [37 37 37] (50653 PWs)
len(kpts) = 64

WARN: ke_cutoff/mesh (200 / [37 37 37]) is not enough for FFTDF to get integral accuracy 1e-08.
Coulomb integral error is ~ 29 Eh.
Recommended ke_cutoff/mesh are 1172.14 / [89 89 89].

kmesh = [4 4 4]
kpts = 
[[ 0.00000000e+00  0.00000000e+00  0.00000000e+00]
 [-1.62121641e-01 -1.14637399e-01  2.80803037e-01]
 [-3.24243283e-01 -2.29274798e-01  5.61606073e-01]
 [-4.86364924e-01 -3.43912196e-01  8.42409110e-01]
 [ 1.34152098e-09  3.43912129e-01  0.00000000e+00]
 [-1.62121640e-01  2.29274730e-01  2.80803037e-01]
 [-3.24243281e-01  1.14637331e-01  5.61606073e-01]
 [-4.86364922e-01 -6.72557783e-08  8.42409110e-01]
 [ 2.68304197e-09  6.87824258e-01  0.00000000e+00]
 [-1.62121639e-01  5.73186859e-01  2.80803037e-01]
 [-3.24243280e-01  4.58549461e-01  5.61606073e-01]
 [-4.86364921e-01  3.43912062e-01  8.42409110e-01]
 [ 4.02456295e-09  1.03173639e+00  0.00000000e+00]
 [-1.62121637e-01  9.17098988e-01  2.80803037e-01]
 [-3.24243278e-01  8.02461590e-01  5.61606073e-01]
 [-4.86364920e-01  6.87824191e-01  8.42409110e-01]
 [ 3.24243282e-01 -1.14637331e-01  0.00000000e+00]
 [ 1.62121641e-01 -2.29274729e-01  2.80803037e-01]
 [-2.46173915e-10 -3.43912128e-01  5.61606073e-01]
 [-1.62121642e-01 -4.58549527e-01  8.42409110e-01]
 [ 3.24243284e-01  2.29274798e-01  0.00000000e+00]
 [ 1.62121642e-01  1.14637400e-01  2.80803037e-01]
 [ 1.09534709e-09  7.74527886e-10  5.61606073e-01]
 [-1.62121640e-01 -1.14637398e-01  8.42409110e-01]
 [ 3.24243285e-01  5.73186927e-01  0.00000000e+00]
 [ 1.62121644e-01  4.58549529e-01  2.80803037e-01]
 [ 2.43686804e-09  3.43912130e-01  5.61606073e-01]
 [-1.62121639e-01  2.29274731e-01  8.42409110e-01]
 [ 3.24243286e-01  9.17099056e-01  0.00000000e+00]
 [ 1.62121645e-01  8.02461658e-01  2.80803037e-01]
 [ 3.77838905e-09  6.87824259e-01  5.61606073e-01]
 [-1.62121637e-01  5.73186860e-01  8.42409110e-01]
 [ 6.48486565e-01 -2.29274661e-01  0.00000000e+00]
 [ 4.86364923e-01 -3.43912060e-01  2.80803037e-01]
 [ 3.24243282e-01 -4.58549459e-01  5.61606073e-01]
 [ 1.62121641e-01 -5.73186858e-01  8.42409110e-01]
 [ 6.48486566e-01  1.14637468e-01  0.00000000e+00]
 [ 4.86364925e-01  6.88048341e-08  2.80803037e-01]
 [ 3.24243283e-01 -1.14637330e-01  5.61606073e-01]
 [ 1.62121642e-01 -2.29274729e-01  8.42409110e-01]
 [ 6.48486567e-01  4.58549597e-01  0.00000000e+00]
 [ 4.86364926e-01  3.43912198e-01  2.80803037e-01]
 [ 3.24243285e-01  2.29274799e-01  5.61606073e-01]
 [ 1.62121643e-01  1.14637400e-01  8.42409110e-01]
 [ 6.48486569e-01  8.02461726e-01  0.00000000e+00]
 [ 4.86364927e-01  6.87824327e-01  2.80803037e-01]
 [ 3.24243286e-01  5.73186928e-01  5.61606073e-01]
 [ 1.62121645e-01  4.58549529e-01  8.42409110e-01]
 [ 9.72729847e-01 -3.43911992e-01  0.00000000e+00]
 [ 8.10608206e-01 -4.58549391e-01  2.80803037e-01]
 [ 6.48486564e-01 -5.73186790e-01  5.61606073e-01]
 [ 4.86364923e-01 -6.87824188e-01  8.42409110e-01]
 [ 9.72729848e-01  1.36835140e-07  0.00000000e+00]
 [ 8.10608207e-01 -1.14637262e-01  2.80803037e-01]
 [ 6.48486566e-01 -2.29274661e-01  5.61606073e-01]
 [ 4.86364924e-01 -3.43912059e-01  8.42409110e-01]
 [ 9.72729849e-01  3.43912266e-01  0.00000000e+00]
 [ 8.10608208e-01  2.29274867e-01  2.80803037e-01]
 [ 6.48486567e-01  1.14637468e-01  5.61606073e-01]
 [ 4.86364926e-01  6.95793620e-08  8.42409110e-01]
 [ 9.72729851e-01  6.87824395e-01  0.00000000e+00]
 [ 8.10608210e-01  5.73186996e-01  2.80803037e-01]
 [ 6.48486568e-01  4.58549597e-01  5.61606073e-01]
 [ 4.86364927e-01  3.43912199e-01  8.42409110e-01]]
nip = 780, nao = 39, cisdf =  20.00
    CPU time for get interpolating vectors      0.10 sec
Out-core version is used for eta_kpt, disk space required = 4.05e+01 GB.
memory used for each block = 2.03e+00 GB, each k-point = 6.32e-01 GB
max_memory = 1.01e+01 GB
    CPU time for aoR_loop: [      0,    2541]     11.57 sec, wall time     12.32 sec
    CPU time for aoR_loop: [   2541,    5082]     11.53 sec, wall time     13.34 sec
    CPU time for aoR_loop: [   5082,    7623]     11.52 sec, wall time     13.86 sec
    CPU time for aoR_loop: [   7623,   10164]     11.46 sec, wall time     15.12 sec
    CPU time for aoR_loop: [  10164,   12705]     11.68 sec, wall time     14.76 sec
    CPU time for aoR_loop: [  12705,   15246]     11.54 sec, wall time     14.40 sec
    CPU time for aoR_loop: [  15246,   17787]     11.52 sec, wall time     14.59 sec
    CPU time for aoR_loop: [  17787,   20328]     11.58 sec, wall time     14.57 sec
    CPU time for aoR_loop: [  20328,   22869]     11.80 sec, wall time     14.43 sec
    CPU time for aoR_loop: [  22869,   25410]     11.36 sec, wall time     14.85 sec
    CPU time for aoR_loop: [  25410,   27951]     11.55 sec, wall time     15.02 sec
    CPU time for aoR_loop: [  27951,   30492]     11.52 sec, wall time     14.03 sec
    CPU time for aoR_loop: [  30492,   33033]     11.29 sec, wall time     16.11 sec
    CPU time for aoR_loop: [  33033,   35574]      9.35 sec, wall time     47.22 sec
    CPU time for aoR_loop: [  35574,   38115]     10.99 sec, wall time     13.37 sec
    CPU time for aoR_loop: [  38115,   40656]     10.98 sec, wall time     12.95 sec
    CPU time for aoR_loop: [  40656,   43197]     10.81 sec, wall time     12.76 sec
    CPU time for aoR_loop: [  43197,   45738]     10.90 sec, wall time     12.71 sec
    CPU time for aoR_loop: [  45738,   48279]     10.69 sec, wall time     12.39 sec
    CPU time for aoR_loop: [  48279,   50653]      9.81 sec, wall time     14.65 sec
Finished solving Coulomb kernel for q =   1 /  64, rank = 647 / 780
    CPU time for solving Coulomb kernel     16.94 sec, wall time     20.29 sec
Finished solving Coulomb kernel for q =   2 /  64, rank = 647 / 780
    CPU time for solving Coulomb kernel     16.41 sec, wall time     16.72 sec
Finished solving Coulomb kernel for q =   3 /  64, rank = 647 / 780
    CPU time for solving Coulomb kernel     16.19 sec, wall time     16.31 sec
Finished solving Coulomb kernel for q =   4 /  64, rank = 647 / 780
    CPU time for solving Coulomb kernel     16.00 sec, wall time     16.73 sec
Finished solving Coulomb kernel for q =   5 /  64, rank = 647 / 780
    CPU time for solving Coulomb kernel     16.42 sec, wall time     16.56 sec
Finished solving Coulomb kernel for q =   6 /  64, rank = 647 / 780
    CPU time for solving Coulomb kernel     16.34 sec, wall time     16.45 sec
Finished solving Coulomb kernel for q =   7 /  64, rank = 647 / 780
    CPU time for solving Coulomb kernel     15.89 sec, wall time     16.86 sec
Finished solving Coulomb kernel for q =   8 /  64, rank = 647 / 780
    CPU time for solving Coulomb kernel     15.98 sec, wall time     16.89 sec
Finished solving Coulomb kernel for q =   9 /  64, rank = 647 / 780
    CPU time for solving Coulomb kernel     16.18 sec, wall time     16.47 sec
Finished solving Coulomb kernel for q =  10 /  64, rank = 647 / 780
    CPU time for solving Coulomb kernel     16.17 sec, wall time     16.27 sec
Finished solving Coulomb kernel for q =  11 /  64, rank = 647 / 780
    CPU time for solving Coulomb kernel     16.00 sec, wall time     16.09 sec
Finished solving Coulomb kernel for q =  12 /  64, rank = 647 / 780
    CPU time for solving Coulomb kernel     16.11 sec, wall time     16.33 sec
Finished solving Coulomb kernel for q =  13 /  64, rank = 647 / 780
    CPU time for solving Coulomb kernel     16.07 sec, wall time     16.18 sec
Finished solving Coulomb kernel for q =  14 /  64, rank = 647 / 780
    CPU time for solving Coulomb kernel     16.22 sec, wall time     16.65 sec
Finished solving Coulomb kernel for q =  15 /  64, rank = 647 / 780
    CPU time for solving Coulomb kernel     16.02 sec, wall time     16.98 sec
Finished solving Coulomb kernel for q =  16 /  64, rank = 647 / 780
    CPU time for solving Coulomb kernel     16.06 sec, wall time     16.66 sec
Finished solving Coulomb kernel for q =  17 /  64, rank = 647 / 780
    CPU time for solving Coulomb kernel     15.97 sec, wall time     16.09 sec
Finished solving Coulomb kernel for q =  18 /  64, rank = 647 / 780
    CPU time for solving Coulomb kernel     16.09 sec, wall time     17.13 sec
Finished solving Coulomb kernel for q =  19 /  64, rank = 647 / 780
    CPU time for solving Coulomb kernel     16.03 sec, wall time     16.30 sec
